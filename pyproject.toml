[tool.poetry]
name = "logdetective"
version = "2.0.2"
description = "Log using LLM AI to search for build/test failures and provide ideas for fixing these."
authors = ["Jiri Podivin <jpodivin@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
include = [
    "logdetective/drain3.ini",
    "logdetective/server/templates/gitlab_comment.md.j2",
    "logdetective/prompts.yml",
    "logdetective.1.asciidoc",
]
packages = [
    { include = "logdetective" }
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Debuggers",
    "Topic :: Internet :: Log Analysis"
]

[tool.poetry.urls]
homepage = "https://github.com/fedora-copr/logdetective"
issues = "https://github.com/fedora-copr/logdetective/issues"

[tool.poetry.dependencies]
python = "^3.11"
llama-cpp-python = ">0.2.56,!=0.2.86,<1.0.0"
drain3 = ">=0.9.11,<0.10.0"
huggingface-hub = ">0.23.2,<0.35.0"
# rawhide has numpy 2, F40 and F41 are still on 1.26
# we need to support both versions
numpy = ">=1.26.0"
python-gitlab = ">=4.4.0"
pydantic = ">=2.8.2,<3.0.0"
pyyaml = ">=6.0.1,<7.0.0"
aiohttp = ">=3.7.4,<4.0.0"  # latest version in el8
aiolimiter = ">=1.0.0,<2.0.0"

fastapi = {version = ">=0.111.1,<1.0.0", optional = true }
sqlalchemy = {version = ">=2.0.36,<3.0.0", optional = true }
psycopg2-binary = {version = ">=2.9.9,<3.0.0", optional = true }
psycopg2 = {version = ">=2.9.9,<3.0.0", optional = true }
alembic = {version = ">=1.13.3,<2.0.0", optional = true }
matplotlib = {version = ">=3.8.4,<4.0.0", optional = true }
backoff = {version = "2.2.1", optional = true }
sentry-sdk = {version = ">=2.17.0,<3.0.0", optional = true, extras = ["fastapi"]}
openai = {version = ">=1.82.1,<2.0.0", optional = true}
koji = {version = ">=1.35.0,<2.0.0", optional = true}
responses = {version = ">=0.25.7,<0.26.0", optional = true}
aioresponses = {version = ">=0.7.8,<0.8.0", optional = true}
pytest-asyncio = {version = ">=1.1.0,<2.0.0", optional = true}
pytest-mock = {version = ">=3.14.1,<4.0.0", optional = true}
flexmock = {version = ">=0.12.2,<0.13.0", optional = true}
pytest = {version = ">=8.4.1,<9.0.0", optional = true}

[tool.poetry.extras]
server = ["fastapi", "sqlalchemy", "psycopg2", "alembic", "matplotlib", "backoff", "aiolimiter", "sentry-sdk", "openai", "koji"]
server-testing = [
    "fastapi",
    "sqlalchemy",
    "psycopg2-binary",
    "alembic",
    "matplotlib",
    "backoff",
    "sentry-sdk",
    "openai",
    "koji",
    "pytest-mock",
    "responses",
]
testing = ["pytest", "pytest-asyncio", "aioresponses", "flexmock"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
logdetective = 'logdetective.logdetective:main'

[tool.pylint]
disable = [
    "inconsistent-return-statements",
    "missing-module-docstring",
    "too-few-public-methods",
    "unspecified-encoding",
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
