"""Constraints on timezones

Revision ID: 951aa61d8b86
Revises: dda93a488cbf
Create Date: 2025-10-21 12:21:34.741614

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "951aa61d8b86"
down_revision: Union[str, None] = "dda93a488cbf"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "analyze_request_metrics",
        "request_received_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_comment="Timestamp when the request was received",
        existing_nullable=False,
    )
    op.alter_column(
        "analyze_request_metrics",
        "response_sent_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_comment="Timestamp when the response was sent back",
        existing_nullable=True,
    )
    op.alter_column(
        "comments",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_comment="Timestamp when the comment was created",
        existing_nullable=False,
    )
    op.alter_column(
        "koji_task_analysis",
        "request_received_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_comment="Timestamp when the request was received",
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "koji_task_analysis",
        "request_received_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_comment="Timestamp when the request was received",
        existing_nullable=False,
    )
    op.alter_column(
        "comments",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_comment="Timestamp when the comment was created",
        existing_nullable=False,
    )
    op.alter_column(
        "analyze_request_metrics",
        "response_sent_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_comment="Timestamp when the response was sent back",
        existing_nullable=True,
    )
    op.alter_column(
        "analyze_request_metrics",
        "request_received_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_comment="Timestamp when the request was received",
        existing_nullable=False,
    )
    # ### end Alembic commands ###
