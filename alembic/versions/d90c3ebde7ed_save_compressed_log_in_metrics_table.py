"""Save compressed log in metrics table

Revision ID: d90c3ebde7ed
Revises: 2f60bb92411f
Create Date: 2025-04-29 07:19:29.695112

"""

import io
from typing import Sequence, Union
import zipfile

import sqlalchemy as sa
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, Integer, LargeBinary

from alembic import op


# revision identifiers, used by Alembic.
revision: str = "d90c3ebde7ed"
down_revision: Union[str, None] = "2f60bb92411f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


class AnalyzeRequestMetrics(declarative_base()):  # pylint: disable=too-few-public-methods
    """Store data related to received requests and given responses"""

    __tablename__ = "analyze_request_metrics"

    id = Column(Integer, primary_key=True)
    compressed_log = Column(
        LargeBinary(length=314572800),  # 300MB limit (300 * 1024 * 1024)
        nullable=False,
        index=False,
        comment="Log processed, saved in a zip format",
    )


def upgrade() -> None:
    """Upgrade schema."""
    op.add_column(
        "analyze_request_metrics",
        sa.Column(
            "compressed_log",
            sa.LargeBinary(length=314572800),
            nullable=True,  # temporarily let column be null
            comment="Log processed, saved in a zip format",
        ),
    )

    # Create a fake zip file in memory
    fake_zip_buffer = io.BytesIO()
    with zipfile.ZipFile(fake_zip_buffer, "w", zipfile.ZIP_DEFLATED) as zip_file:
        zip_file.writestr(
            "log.txt", "There were no log_url saved in our db when we created this row."
        )

    fake_zip_data = fake_zip_buffer.getvalue()

    bind = op.get_bind()
    session = sa.orm.Session(bind=bind)

    for metric in session.query(AnalyzeRequestMetrics).all():
        metric.compressed_log = fake_zip_data
        session.add(metric)

    session.commit()

    op.alter_column(
        "analyze_request_metrics",
        "compressed_log",
        nullable=False,  # add constraint
        existing_type=sa.LargeBinary(length=314572800),
        existing_comment="Log processed, saved in a zip format",
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("analyze_request_metrics", "compressed_log")
    # ### end Alembic commands ###
