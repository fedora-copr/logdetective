"""Use BigInteger for gitlab ids definition

Revision ID: bbc5b9c1f0b3
Revises: e73338ea1b53
Create Date: 2025-04-18 08:51:28.500953

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "bbc5b9c1f0b3"
down_revision: Union[str, None] = "e73338ea1b53"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "comments",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "comments",
        "merge_request_job_id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_comment="The associated merge request job (db) id",
        existing_nullable=False,
    )
    op.alter_column(
        "gitlab_merge_request_jobs",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('gitlab_merge_request_jobs_id_seq'::regclass)"
        ),
    )
    op.alter_column(
        "gitlab_merge_request_jobs",
        "project_id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_comment="The project gitlab id",
        existing_nullable=False,
    )
    op.alter_column(
        "gitlab_merge_request_jobs",
        "mr_iid",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_comment="The merge request gitlab iid",
        existing_nullable=False,
    )
    op.alter_column(
        "gitlab_merge_request_jobs",
        "job_id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_comment="The job gitlab id",
        existing_nullable=False,
    )
    op.alter_column(
        "reactions",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "reactions",
        "comment_id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_comment="The associated comment (db) id",
        existing_nullable=False,
    )
    op.alter_column(
        "reactions",
        "count",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_comment="The number of reactions, of this type, given in the comment",
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "reactions",
        "count",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_comment="The number of reactions, of this type, given in the comment",
        existing_nullable=False,
    )
    op.alter_column(
        "reactions",
        "comment_id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_comment="The associated comment (db) id",
        existing_nullable=False,
    )
    op.alter_column(
        "reactions",
        "id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "gitlab_merge_request_jobs",
        "job_id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_comment="The job gitlab id",
        existing_nullable=False,
    )
    op.alter_column(
        "gitlab_merge_request_jobs",
        "mr_iid",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_comment="The merge request gitlab iid",
        existing_nullable=False,
    )
    op.alter_column(
        "gitlab_merge_request_jobs",
        "project_id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_comment="The project gitlab id",
        existing_nullable=False,
    )
    op.alter_column(
        "gitlab_merge_request_jobs",
        "id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('gitlab_merge_request_jobs_id_seq'::regclass)"
        ),
    )
    op.alter_column(
        "comments",
        "merge_request_job_id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_comment="The associated merge request job (db) id",
        existing_nullable=False,
    )
    op.alter_column(
        "comments",
        "id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
    )
    # ### end Alembic commands ###
